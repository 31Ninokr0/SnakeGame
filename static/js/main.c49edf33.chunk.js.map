{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","document","addEventListener","e","setVelocity","setTimeout","gameLoop","state","snake","tail","length","getRandomApple","newApple","row","Math","floor","random","col","isTail","head","row1","gameOver","setState","_ref","apple","collidesWithApple","nextState","objectSpread","velocity","y","x","concat","toConsumableArray","pop","isOffEdge","_this$state","isApple","cell","isHead","find","inTail","startGame","event","keyCode","_ref2","_ref3","_ref4","_ref5","grid","columns","push","temp","newHS","getElementById","innerHTML","localStorage","getItem","setItem","_this2","_this$state2","react_default","a","createElement","id","align","vertical-align","className","HighScore","printScore","map","i","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sPAuOeA,cAnOb,SAAAA,IAAc,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAqBFI,kBAAoB,WAClBC,SAASC,iBAAiB,UAAW,SAACC,GAAQV,EAAKW,YAAYD,KAC/DE,WAAW,WACTZ,EAAKa,YACJb,EAAKc,MAAMC,MAAMC,KAAKC,OAAU,IAAMjB,EAAKc,MAAMC,MAAMC,KAAKC,OAAU,MA1B7DjB,EA6BdkB,eAAiB,WAAM,IACbH,EAAUf,EAAKc,MAAfC,MACFI,EAAW,CAAEC,IAAKC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAgBC,IAAKH,KAAKC,MAAsB,GAAhBD,KAAKE,WAC7E,OAAIvB,EAAKyB,OAAON,IAAcJ,EAAMW,KAAKN,MAAQD,EAASQ,MAAQZ,EAAMW,KAAKF,MAAQL,EAASK,IACrFxB,EAAKkB,iBAELC,GAnCGnB,EAuCda,SAAW,WACLb,EAAKc,MAAMc,UACf5B,EAAK6B,SAAS,SAAAC,GAAoB,IAAlBf,EAAkBe,EAAlBf,MAAOgB,EAAWD,EAAXC,MACfC,EAAoBhC,EAAKgC,oBACzBC,EAAY,CAChBlB,MAAMd,OAAAiC,EAAA,EAAAjC,CAAA,GACDc,EADA,CAEHW,KAAM,CACJN,IAAKL,EAAMW,KAAKN,IAAML,EAAMoB,SAASC,EACrCZ,IAAKT,EAAMW,KAAKF,IAAMT,EAAMoB,SAASE,GAEvCrB,KAAI,CAAGD,EAAMW,MAATY,OAAArC,OAAAsC,EAAA,EAAAtC,CAAkBc,EAAMC,SAE9Be,MAAOC,EAAoBhC,EAAKkB,iBAAmBa,GAKrD,OAFKC,GAAmBC,EAAUlB,MAAMC,KAAKwB,MAEtCP,GACN,WAAM,IACClB,EAAUf,EAAKc,MAAfC,MACJf,EAAKyC,aAAezC,EAAKyB,OAAOV,EAAMW,MACxC1B,EAAK6B,SAAS,CACZD,UAAU,IAKdhB,WAAW,WACTZ,EAAKa,YACJb,EAAKc,MAAMC,MAAMC,KAAKC,OAAU,IAAMjB,EAAKc,MAAMC,MAAMC,KAAKC,OAAU,QArE/DjB,EAyEdyC,UAAY,WAAM,IACR1B,EAAUf,EAAKc,MAAfC,MACR,GAAIA,EAAMW,KAAKF,IAAM,IAAMT,EAAMW,KAAKF,IAAM,GACxCT,EAAMW,KAAKN,IAAM,IAAML,EAAMW,KAAKN,IAAM,EACxC,OAAO,GA7ECpB,EAiFdgC,kBAAoB,WAAM,IAAAU,EACC1C,EAAKc,MAAtBiB,EADgBW,EAChBX,MAAOhB,EADS2B,EACT3B,MACf,OAAOgB,EAAMX,MAAQL,EAAMW,KAAKN,KAAOW,EAAMP,MAAQT,EAAMW,KAAKF,KAnFpDxB,EAsFd2C,QAAU,SAACC,GAAS,IACVb,EAAU/B,EAAKc,MAAfiB,MACR,OAAOA,EAAMX,MAAQwB,EAAKxB,KAAOW,EAAMP,MAAQoB,EAAKpB,KAxFxCxB,EA2Fd6C,OAAS,SAACD,GAAS,IACT7B,EAAUf,EAAKc,MAAfC,MACR,OAAOA,EAAMW,KAAKN,MAAQwB,EAAKxB,KAAOL,EAAMW,KAAKF,MAAQoB,EAAKpB,KA7FlDxB,EAgGdyB,OAAS,SAACmB,GAER,OADkB5C,EAAKc,MAAfC,MACKC,KAAK8B,KAAK,SAAAC,GAAM,OAAIA,EAAO3B,MAAQwB,EAAKxB,KAAO2B,EAAOvB,MAAQoB,EAAKpB,OAlGpExB,EAqGdgD,UAAY,SAACC,GACX,OAAyB,KAAlBA,EAAMC,SAtGDlD,EA2GdW,YAAc,SAACsC,GAAU,IACflC,EAAUf,EAAKc,MAAfC,MACR,GAAsB,KAAlBkC,EAAMC,QAAgB,CACxB,GAAyB,IAArBnC,EAAMoB,SAASC,EAAS,OAC5BpC,EAAK6B,SAAS,SAAAsB,GAAA,IAAEpC,EAAFoC,EAAEpC,MAAF,MAAc,CAC1BA,MAAMd,OAAAiC,EAAA,EAAAjC,CAAA,GAAMc,EAAP,CAAcoB,SAAU,CAAEE,EAAG,EAAGD,GAAI,aAEtC,GAAsB,KAAlBa,EAAMC,QAAgB,CAC/B,IAA0B,IAAtBnC,EAAMoB,SAASC,EAAU,OAC7BpC,EAAK6B,SAAS,SAAAuB,GAAA,IAAErC,EAAFqC,EAAErC,MAAF,MAAc,CAC1BA,MAAMd,OAAAiC,EAAA,EAAAjC,CAAA,GAAMc,EAAP,CAAcoB,SAAU,CAAEE,EAAG,EAAGD,EAAG,aAErC,GAAsB,KAAlBa,EAAMC,QAAiB,CAChC,IAA0B,IAAtBnC,EAAMoB,SAASE,EAAU,OAC7BrC,EAAK6B,SAAS,SAAAwB,GAAA,IAAEtC,EAAFsC,EAAEtC,MAAF,MAAc,CAC1BA,MAAMd,OAAAiC,EAAA,EAAAjC,CAAA,GAAMc,EAAP,CAAcoB,SAAU,CAAEE,EAAG,EAAGD,EAAG,aAErC,GAAsB,KAAlBa,EAAMC,QAAiB,CAChC,GAAyB,IAArBnC,EAAMoB,SAASE,EAAS,OAC5BrC,EAAK6B,SAAS,SAAAyB,GAAA,IAAEvC,EAAFuC,EAAEvC,MAAF,MAAc,CAC1BA,MAAMd,OAAAiC,EAAA,EAAAjC,CAAA,GAAMc,EAAP,CAAcoB,SAAU,CAAEE,GAAI,EAAGD,EAAG,UA3H7C,IADA,IAAMmB,EAAO,GACJnC,EAAM,EAAGA,EAAM,GAAIA,IAAO,CAEjC,IADA,IAAMoC,EAAU,GACPhC,EAAM,EAAGA,EAAM,GAAIA,IAC1BgC,EAAQC,KAAM,CAACrC,MAAKI,QACtB+B,EAAKE,KAAKD,GARA,OAWZxD,EAAKc,MAAQ,CACXyC,OACAxB,MAAO,CAAGX,IAAKC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAgBC,IAAKH,KAAKC,MAAsB,GAAhBD,KAAKE,WACpER,MAAO,CACLW,KAAM,CAAEN,IAAK,EAAGI,IAAK,GACrBW,SAAU,CAAEE,EAAG,EAAGD,EAAG,GACrBpB,KAAM,KAjBEhB,4EAqID,IACHe,EAAUZ,KAAKW,MAAfC,MACJ2C,EAAI,yBAAApB,OAA4BvB,EAAMC,KAAKC,OAAvC,cACJ0C,EAAK,iCAAArB,OAAoCvB,EAAMC,KAAKC,OAA/C,cACTT,SAASoD,eAAe,UAAUC,UAAYH,EAE5B,qBAAuBI,cACxBA,aAAaC,QAAQ,iBAChCD,aAAaC,QAAQ,iBAAmBhD,EAAMC,KAAKC,SACrD6C,aAAaE,QAAQ,gBAAiBjD,EAAMC,KAAKC,QACjDT,SAASoD,eAAe,UAAUC,UAAYF,GAGhDG,aAAaE,QAAQ,gBAAiBjD,EAAMC,KAAKC,QAGnDT,SAASoD,eAAe,aAAaC,UAAYC,aAAaC,QAAQ,qDAMtE,MADkB,qBAAuBD,cACxBA,aAAaC,QAAQ,iBAC7BD,aAAaC,QAAQ,iBAErB,mCAIF,IAAAE,EAAA9D,KAAA+D,EAC2B/D,KAAKW,MAA/ByC,EADDW,EACCX,KAAa3B,GADdsC,EACOnD,MADPmD,EACctC,UAErB,OACEuC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,OAAKC,GAAI,UACPH,EAAAC,EAAAC,cAAA,MAAIE,MAAM,SAASC,iBAAe,UAAlC,IAA4CL,EAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAhB,6BAA5C,MAIFN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,MAAII,UAAU,OAAOF,MAAM,UAA3B,sBAEAJ,EAAAC,EAAAC,cAAA,MAAIC,GAAG,YAAYC,MAAM,SAASE,UAAU,QAAQtE,KAAKuE,cAI3DP,EAAAC,EAAAC,cAAA,OAAKE,MAAM,UACTJ,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,OAAOH,GAAG,UAA1B,2BAEPH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAGZ7C,EAAUzB,KAAKwE,aAAc,GAE5B/C,EACAuC,EAAAC,EAAAC,cAAA,WAASE,MAAM,SAASE,UAAU,QAEhClB,EAAKqB,IAAI,SAACxD,EAAKyD,GAAN,OAAazD,EAAIwD,IAAI,SAAAhC,GAAI,OAC9BuB,EAAAC,EAAAC,cAAA,OAAKS,IAAG,GAAAxC,OAAKM,EAAKxB,IAAV,KAAAkB,OAAiBM,EAAKpB,KAAOiD,UAAS,6BAAAnC,OAE1C2B,EAAKpB,OAAOD,GAAQ,OACpBqB,EAAKtB,QAAQC,GAAQ,QACrBqB,EAAKxC,OAAOmB,GAAQ,OACpB,WAMVuB,EAAAC,EAAAC,cAAA,WAASE,MAAM,SAASE,UAAU,QAE9BlB,EAAKqB,IAAI,SAACxD,EAAKyD,GAAN,OAAazD,EAAIwD,IAAI,SAAAhC,GAAI,OAC9BuB,EAAAC,EAAAC,cAAA,OAAKS,IAAG,GAAAxC,OAAKM,EAAKxB,IAAV,KAAAkB,OAAiBM,EAAKpB,KAAOiD,UAAS,+BAAAnC,OAE1C2B,EAAKpB,OAAOD,GAAQ,OACpBqB,EAAKtB,QAAQC,GAAQ,QACrBqB,EAAKxC,OAAOmB,GAAQ,OACpB,oBApNNmC,aCSEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAAS/E,SAASoD,eAAe,SD2H3C,kBAAmB4B,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c49edf33.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass App extends Component {\n  constructor() {\n    super(); //Parent Object\n\n    const grid = []; //array of columns\n    for (let row = 0; row < 20; row++) {\n      const columns = []; //array of rows\n      for (let col = 0; col < 20; col++) \n        columns.push( {row, col} ); //pushing a \"row\" value and \"col\" value\n      grid.push(columns); //pushing colomns in the grid\n    }\n\n    this.state = {\n      grid,\n      apple: {  row: Math.floor(Math.random() * 20), col: Math.floor(Math.random() * 20) },\n      snake: {\n        head: { row: 9, col: 9 }, //initial position in the middle if the grid\n        velocity: { x: 0, y: 1 }, //starts by going downward\n        tail: [] //tail of snake\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('keydown', (e) => { this.setVelocity(e); });\n    setTimeout(() => {\n      this.gameLoop()\n    }, this.state.snake.tail.length ? (400 / this.state.snake.tail.length) : 400);\n  }\n\n  getRandomApple = () => {\n    const { snake } = this.state;\n    const newApple = { row: Math.floor(Math.random() * 20), col: Math.floor(Math.random() * 20) };\n    if (this.isTail(newApple) || (snake.head.row === newApple.row1 && snake.head.col === newApple.col)) {\n      return this.getRandomApple();\n    } else {\n      return newApple;\n    }\n  }\n\n  gameLoop = () => {\n    if (this.state.gameOver) return;\n    this.setState(({snake, apple}) => {\n      const collidesWithApple = this.collidesWithApple();\n      const nextState = {\n        snake: {\n          ...snake,\n          head: {\n            row: snake.head.row + snake.velocity.y,\n            col: snake.head.col + snake.velocity.x\n          },\n          tail: [snake.head, ...snake.tail]\n        },\n        apple: collidesWithApple ? this.getRandomApple() : apple\n      };\n\n      if (!collidesWithApple) nextState.snake.tail.pop();\n\n      return nextState;\n    }, () => {\n      const { snake } = this.state;\n      if (this.isOffEdge() || this.isTail(snake.head)) {\n        this.setState({\n          gameOver: true,\n        });\n        return;\n      }\n  \n      setTimeout(() => {\n        this.gameLoop()\n      }, this.state.snake.tail.length ? (400 / this.state.snake.tail.length) : 400);\n    });\n  }\n\n  isOffEdge = () => {\n    const { snake } = this.state;\n    if (snake.head.col > 19 || snake.head.col < 0 || \n        snake.head.row > 19 || snake.head.row < 0) {\n        return true;\n      }\n  }\n\n  collidesWithApple = () => {\n    const { apple, snake } = this.state;\n    return apple.row === snake.head.row && apple.col === snake.head.col;\n  }\n\n  isApple = (cell) => {\n    const { apple } = this.state;\n    return apple.row === cell.row && apple.col === cell.col;\n  }\n\n  isHead = (cell) => {\n    const { snake } = this.state;\n    return snake.head.row === cell.row && snake.head.col === cell.col;\n  }\n\n  isTail = (cell) => {\n    const { snake } = this.state;\n    return snake.tail.find(inTail => inTail.row === cell.row && inTail.col === cell.col);\n  }\n\n  startGame = (event) => {\n    return event.keyCode === 83;\n  }\n\n  \n\n  setVelocity = (event) => {\n    const { snake } = this.state;\n    if (event.keyCode === 38) { // up\n      if (snake.velocity.y === 1) return;\n      this.setState(({snake}) => ({\n        snake: { ...snake, velocity: { x: 0, y: -1 } }\n      }))\n    } else if (event.keyCode === 40) {// down \n      if (snake.velocity.y === -1) return;\n      this.setState(({snake}) => ({\n        snake: { ...snake, velocity: { x: 0, y: 1 } }\n      }))\n    } else if (event.keyCode === 39)  {//right\n      if (snake.velocity.x === -1) return;\n      this.setState(({snake}) => ({\n        snake: { ...snake, velocity: { x: 1, y: 0 } }\n      }))\n    } else if (event.keyCode === 37)  { // left\n      if (snake.velocity.x === 1) return;\n      this.setState(({snake}) => ({\n        snake: { ...snake, velocity: { x: -1, y: 0 } }\n      }))\n    }\n  }\n\n  \n  printScore() {\n    const { snake } = this.state;\n    var temp = `Game Over! You scored ${snake.tail.length} apple(s)!`;\n    var newHS = `Congrats on New High Score of ${snake.tail.length} apple(s)!`;\n    document.getElementById(\"myText\").innerHTML = temp;\n\n    const isStorage = 'undefined' !== typeof localStorage;\n    if (isStorage && localStorage.getItem('userHighScore')) {\n      if (localStorage.getItem('userHighScore') < snake.tail.length ) {\n        localStorage.setItem('userHighScore', snake.tail.length);\n        document.getElementById(\"myText\").innerHTML = newHS;\n      }\n    } else {\n      localStorage.setItem('userHighScore', snake.tail.length);\n    }\n\n    document.getElementById(\"highScore\").innerHTML = localStorage.getItem('userHighScore');\n\n  }\n\n  HighScore() {\n    const isStorage = 'undefined' !== typeof localStorage;\n    if (isStorage && localStorage.getItem('userHighScore')) {\n      return localStorage.getItem('userHighScore');\n    } else {\n      return 0;\n    }\n  };\n\n  render() {\n    const { grid, snake, gameOver } = this.state;\n    \n    return (\n      <div>\n\n        <div id= \"header\">\n          <h1 align=\"center\" vertical-align=\"middle\"> <span className=\"text\"> 5nak3 Gam3 🐍 </span> </h1>\n        </div>\n\n\n        <div className=\"split\">\n          <h3 className=\"text\" align=\"center\">Your Highest Score</h3>\n  \n          <h2 id=\"highScore\" align=\"center\" className=\"text\">{this.HighScore()}</h2>\n            \n        </div>\n        \n        <div align=\"center\">\n          <h1> <span className=\"text\" id=\"myText\">Welcome to Snake Game</span></h1> \n        </div>\n        <div className=\"App\">\n\n\n          {gameOver? this.printScore(): \"\"}\n          {\n            gameOver ? \n            <section align=\"center\" className=\"grid\">\n            {\n              grid.map((row, i) => (row.map(cell => (\n                  <div key={`${cell.row} ${cell.col}`} className={`cell\n                    ${\n                      this.isHead(cell) ? 'head' : \n                      this.isApple(cell) ? 'apple' : \n                      this.isTail(cell) ? 'tail' : \n                      ''}`}>\n                  </div>\n                ))\n              ))\n            }\n            </section> : \n            <section align=\"center\" className=\"grid\">\n              {\n                grid.map((row, i) => (row.map(cell => (\n                    <div key={`${cell.row} ${cell.col}`} className={`cell\n                      ${\n                        this.isHead(cell) ? 'head' : \n                        this.isApple(cell) ? 'apple' : \n                        this.isTail(cell) ? 'tail' : \n                        ''}`}>\n                    </div>\n                  ))\n                ))\n              } \n              </section>\n          }\n\n          </div>\n      </div>\n      \n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}